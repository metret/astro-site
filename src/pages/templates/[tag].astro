---
import { getCollection } from "astro:content";
import PageLayout from "~/layouts/PageLayout.astro";
import TemplateCard from "~/components/blocks/TemplateCard.astro";
import TempateTagMenu from "~/components/blocks/TempateTagMenu.astro";
import Hero from "~/components/blocks/Hero.astro";
import TemplateGrid from "~/components/blocks/TemplateGrid.astro";
import templateTags from "~/../data/template-tags.json";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const templates = await getCollection("templates");

  const tags = templates
    .flatMap((tmpl) => tmpl.data.tags)
    .reduce((acc: any, tag: any) => {
      if (!acc.find((t: any) => t.name === tag.name)) {
        acc.push(tag);
      }

      return acc;
    }, [])
    .sort((a: any, b: any) => a.sort - b.sort);

  return tags.map((tag: any) => ({
    params: { tag: tag.name },
    props: { tagName: tag.name },
  }));
}

const { tagName } = Astro.props;

const templates = await getCollection("templates");

const matching = templates.filter((tmpl) =>
  tmpl.data.tags.some((x: any) => x.name === tagName)
);

const tag = matching
  .flatMap((x) => x.data.tags)
  .find((x: any) => x.name === tagName);

if (!tag) {
  throw new Error("Tag not found");
}

const tagMeta = templateTags.find((t: any) => t.tag.slug === tag.name);

if (!tagMeta) {
  console.warn(`No metadata found for tag: ${tag.label}`);
}
---

<PageLayout title={tagMeta?.pageTitle || tag.label} spacing="md">
  <Hero
    title={tagMeta?.heading || "Expertly crafted templates"}
    description={tagMeta?.description ||
      "Start a board instantly with one of our templates. Templates are fully customizable and come with instructions, sticky notes, categories and fun collaboration tools."}
    pill="Templates"
    compact
  />
  <TempateTagMenu active={tag.name} />

  <TemplateGrid title={tag.label}>
    {
      matching.map((tmpl) => (
        <TemplateCard
          href={`/templates/${tmpl.data.seoSlug}`}
          image={tmpl.data.thumbUrl}
          name={tmpl.data.label}
          description={tmpl.data.description}
          tags={tmpl.data.tags}
        />
      ))
    }
  </TemplateGrid>
</PageLayout>
