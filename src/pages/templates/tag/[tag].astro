---
import { getCollection, render } from "astro:content";
import Dots from "~/components/Dots.astro";
import Layout from "~/layouts/Layout.astro";
import keyBy from "lodash/keyBy";
import TemplateCard from "~/components/blocks/TemplateCard.astro";
import X from "~/pages/solutions/x.astro";
import TempateTagMenu from "~/components/blocks/TempateTagMenu.astro";
import TemplatesHero from "~/components/blocks/TemplatesHero.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const templates = await getCollection("templates");

  const tags = Object.values(
    keyBy(
      templates.flatMap((tmpl: any) => tmpl.data.tags),
      "name",
    ),
  ).sort((a, b) => a.sort - b.sort);

  return tags.map((tag) => ({
    params: { tag: tag.name },
    props: { tagName: tag.name },
  }));
}

const { tagName } = Astro.props;

const templates = await getCollection("templates");

const matching = templates.filter((tmpl) =>
  tmpl.data.tags.some((x: any) => x.name === tagName),
);

const tag = matching
  .flatMap((x) => x.data.tags)
  .find((x: any) => x.name === tagName);
---

<Layout title="Blogs">
  <TemplatesHero />
  <TempateTagMenu active={tag.name} />
  <section class="px-4">
    <div class="mx-auto max-w-[80rem]">
      <p class="text-xl/8 font-medium">
        {tag.label}
      </p>
      <div
        class="grid grid-cols-1 gap-6 py-6 md:grid-cols-2 lg:grid-cols-3 lg:py-4"
      >
        {
          matching.map((tmpl) => (
            <TemplateCard
              href={`/blog/${tmpl.data.alias}`}
              image={tmpl.data.thumbUrl}
              name={tmpl.data.label}
              description={tmpl.data.description}
              tags={tmpl.data.tags}
            />
          ))
        }
      </div>
    </div>
  </section>
</Layout>
