---
import { getCollection, render } from "astro:content";
import BlogPostContent from "~/components/blocks/BlogPostContent.astro";
import BlogPostHero from "~/components/blocks/BlogPostHero.astro";
import Dots from "~/components/Dots.astro";
import PageLayout from "~/layouts/PageLayout.astro";
import Newsletter from "~/components/blocks/Newsletter.astro";
import PostCard from "~/components/blocks/PostCard.astro";
import SignUp from "~/components/blocks/SignUp.astro";
import type { Props as AstroSEOProps } from "astro-seo";
import { articleMeta, dynamicImportImage } from "~/utils";
import LinkButton from "~/components/ui/LinkButton.astro";
import LinkArrowButton from "~/components/ui/LinkArrowButton.astro";
import TemplateTag from "~/components/blocks/TemplateTag.astro";
import LeftArrowLinkButton from "~/components/ui/LeftArrowLinkButton.astro";
import TemplateSuggestions from "~/components/blocks/TemplateSuggestions.astro";
import TemplatePreview from "~/components/blocks/TemplatePreview.astro";
import Document from "~/components/blocks/Document.astro";
import Hero from "~/components/blocks/Hero.astro";

export async function getStaticPaths() {
  const templates = await getCollection("templates");

  return templates.map((template) => {
    return {
      params: { alias: template.data.alias },
      props: { template },
    };
  });
}

const { template } = Astro.props;

const { Content } = await render(template);

const seo = await articleMeta({
  title: template.data.seoTitle || template.data.label,
  description: template.data.description,
  image: template.data.thumbUrl,
  authorName: "Metro Retro",
  category: template.data.tags[0].label,
  publishedDate: new Date(template.data.publishedAt),
  modifiedDate: new Date(template.data.publishedAt),
});
---

<PageLayout {...seo} spacing="md">
  <section class="mt-8">
    <div class="mx-auto max-w-[80rem] space-y-6 px-4 lg:px-8">
      <div class="mt-auto flex flex-wrap gap-2 pt-4">
        {
          template.data.tags.map((tag) => (
            <a href={`/templates/${tag.name}`}>
              <TemplateTag name={tag.label} color={tag.color} />
            </a>
          ))
        }
      </div>

      <div class="grid max-w-[80rem] gap-16 lg:grid-cols-2">
        <div class="space-y-6">
          <h1 class="text-4xl font-semibold text-black">
            {template.data.label}
          </h1>
          <LeftArrowLinkButton href="/templates"
            >All Templates</LeftArrowLinkButton
          >
        </div>

        <div class="space-y-6">
          <p class="text-lg text-gray-300">{template.data.description}</p>
          <LinkButton href="/" class="">Use this template</LinkButton>
        </div>
      </div>
    </div>
  </section>

  <TemplatePreview
    templateId={template.data.id}
    fallbackSrc={template.data.thumbUrl}
  />

  <Document>
    <Content />
  </Document>

  <TemplateSuggestions templateId={template.data.id} />
</PageLayout>
