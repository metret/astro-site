---
import Button from "../ui/Button.astro";
import PostCard from "./PostCard.astro";
import slugify from "slugify";
import { getCollection, render } from "astro:content";

// Get props - either tag or author for filtering
const { tag, author } = Astro.props;

// const allLabels = [
//   "All",
//   "Announcements",
//   "Customer Stories",
//   "Guides",
//   "Online Whiteboard",
//   "Overviews",
//   "Product",
//   "Sprint Retrospective",
//   "Updates",
// ];

const allPosts = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .toSorted(
    (a, b) => b.data.publishedDate.getTime() - a.data.publishedDate.getTime()
  );

const nonHeroPosts = allPosts.slice(1);

// Filter posts based on tag or author
let matchingPosts = nonHeroPosts;

if (tag && tag !== "all") {
  matchingPosts = nonHeroPosts.filter(
    (post) => slugify(post.data.category, { lower: true }) === tag
  );
} else if (author) {
  matchingPosts = nonHeroPosts.filter(
    (post) => slugify(post.data.authorName, { lower: true }) === author
  );
}

const allLabels = [
  "All",
  ...Array.from(new Set(allPosts.map((post) => post.data.category))).sort(),
];

const allTags = allLabels.map((label) => ({
  slug: slugify(label, { lower: true }),
  label,
}));
---

<section>
  <div class="mx-auto max-w-[80rem]">
    <p class="text-xl/8 font-semibold text-blue-200">
      {!author && <span>Latest Guides, News & Updates from Ludi</span>}
      {author && <span>Posts by {matchingPosts[0].data.authorName}</span>}
    </p>
    {
      !author && (
        <div class="my-6 hidden max-md:-mx-4 max-md:pl-4 md:my-8 lg:block">
          <div class="flex items-center justify-between gap-0">
            {allTags.map((c) => (
              <div class="">
                <a
                  data-active={c.slug === tag}
                  class="filter-btn text-body hover:text-purple data-[active='true']:text-purple px-2 py-3.5 text-center text-base font-medium"
                  href={c.slug === "all" ? "/blog" : `/blog/${c.slug}`}
                >
                  {c.label}
                </a>
              </div>
            ))}
          </div>
        </div>
      )
    }

    <div
      class="grid grid-cols-1 gap-6 py-6 md:grid-cols-2 lg:grid-cols-3 lg:py-4"
    >
      {
        matchingPosts.map((post) => (
          <PostCard
            class="data-[shown='false']:hidden"
            href={`/blog/${post.id}`}
            image={post.data.image}
            title={post.data.title}
            author={post.data.authorName}
            category={post.data.category}
            date={post.data.publishedDate}
          />
        ))
      }
    </div>
  </div>
</section>
