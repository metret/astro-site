---
import LinkButton from "../ui/LinkButton.astro";
import Heading from "../ui/Heading.astro";
import IconText from "../ui/IconText.astro";
import Pill from "../ui/Pill.astro";

const faqs: { question: string; answer: string }[] = [
  {
    question: "What can I try during the 30 day free trial?",
    answer:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
  },
  {
    question: "What can I try during the 30 day free trial?",
    answer:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
  },
  {
    question: "What can I try during the 30 day free trial?",
    answer:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
  },
  {
    question: "What can I try during the 30 day free trial?",
    answer:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
  },
  {
    question: "What can I try during the 30 day free trial?",
    answer:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
  },
];
---

<section class="space-y-16 px-4 pt-16 pb-[51px]">
  <div
    class="mx-auto grid max-w-[1100px] grid-cols-1 gap-6 sm:gap-12 lg:grid-cols-[456px_1fr] lg:gap-[100px] xl:gap-[168px]"
  >
    <div class="space-y-6 max-md:contents">
      <Heading class="max-w-[354px] !text-left"
        >Would you like to know more?</Heading
      >
      <p class="text-lg/6 font-semibold text-black">
        Metro Retro is completely free for 30 days, so why not sign up to try it
        out and do your part for collaboration!
      </p>
      <LinkButton href="#signup" class="max-md:order-1 max-md:mx-auto"
        >Sign up for free</LinkButton
      >

      <div class="flex items-center gap-6 max-md:order-2">
        <IconText text="30-day free trial" />
        <IconText text="Live chat support" />
      </div>
    </div>
    <div>
      <ul class="space-y-2.5 md:space-y-5">
        {
          faqs.map((faq) => (
            <li class="faq group/faq" aria-expanded="false">
              <div class="">
                <button
                  type="button"
                  class="text-body relative flex w-full items-start justify-between gap-4 py-3 pr-4 pl-7 text-left text-xl/8 font-semibold"
                >
                  <span class="absolute top-1/2 left-0 -translate-y-1/2">
                    <svg
                      class="plus"
                      width="14"
                      height="14"
                      viewBox="0 0 14 14"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M7 1V13"
                        stroke="#3B65EF"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                      <path
                        d="M13 7L1 7"
                        stroke="#3B65EF"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                    </svg>

                    <svg
                      class="minus"
                      width="14"
                      height="2"
                      viewBox="0 0 14 2"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M13 1L1 0.999999"
                        stroke="#3B65EF"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                    </svg>
                  </span>

                  <span class="">{faq.question}</span>
                </button>

                <div
                  data-expanded="false"
                  class="grid grid-rows-[0fr] border-b border-transparent transition-[grid-template-rows] duration-300 data-[expanded=false]:border-blue-100 data-[expanded=true]:grid-rows-[1fr]"
                >
                  <div class="overflow-hidden">
                    <div class="">
                      <p class="px-6 py-3 text-lg/6 font-medium text-black">
                        {faq.answer}
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
  <Pill
    class="!w-full !max-w-[1080px] !rounded-[100px] !py-3 max-md:!rounded-[20px]"
  >
    <p class="text-xl/8 max-md:text-left">
      Still have a question? <a href="#">Contact us</a> weâ€™ll be happy to help you.
    </p>
  </Pill>
</section>

<style>
  .faq[aria-expanded="false"] .minus,
  .faq[aria-expanded="true"] .plus {
    display: none;
  }
</style>

<script>
  const faqs = [...document.querySelectorAll(".faq")] as HTMLDivElement[];

  function setFAQ(
    faq?: HTMLDivElement | null,
    expanded: "true" | "false" = "false",
  ) {
    if (!faq) return;
    faq.setAttribute("aria-expanded", expanded);
    faq
      .querySelector("[data-expanded]")
      ?.setAttribute("data-expanded", expanded);
  }

  faqs.forEach((faq) => {
    const toggle = faq.querySelector("button") as HTMLButtonElement;

    toggle.addEventListener("click", () => {
      const IS_EXPANDED = faq.getAttribute("aria-expanded") === "true";

      faqs.forEach((faq) => setFAQ(faq, "false"));
      setFAQ(faq, `${!IS_EXPANDED}`);
    });
  });
</script>
