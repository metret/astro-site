---
import Heading from "../ui/Heading.astro";
import Pill from "../ui/Pill.astro";
import LinkButton from "../ui/LinkButton.astro";
import CustomerStoryItem from "./CustomerStoryItem.astro";
import slugify from "slugify";
import { getCollection, render } from "astro:content";

type Props = {
  include?: string[];
  exclude?: string[];
  limit?: number;
};

const { include, exclude, limit } = Astro.props as Props;

const isIncluded = (id: string) => {
  if (!include?.length) return true;
  return !!include.find((x) => id.startsWith(x));
};

const isExcluded = (id: string) => {
  if (!exclude?.length) return false;
  return !!exclude.find((x) => id.startsWith(x));
};

const allFilteredArticles = await getCollection("customers")
  .then((x) => x.toSorted((a, b) => a.data.sort - b.data.sort))
  .then((x) => x.filter((a) => isIncluded(a.id) && !isExcluded(a.id)));

const totalFilteredCount = allFilteredArticles.length;
const articles = allFilteredArticles.slice(0, limit ?? 3);
---

<section class="px-4 pt-[51px] pb-[70px]">
  <Pill>Customer stories</Pill>
  <h2 class="mt-6 text-center text-2xl font-semibold text-black md:text-3xl">
    Discover how these teams use Metro Retro
  </h2>

  <div
    class="mx-auto my-6 grid max-w-[1062px] grid-cols-1 gap-4 md:my-12 md:grid-cols-2 md:gap-6 lg:grid-cols-3"
  >
    {
      articles.map((x, i) => (
        <a href={`/customers/${slugify(x.id)}`}>
          <CustomerStoryItem
            color={x.data.color}
            image={x.data.image}
            description={x.data.headerInfo}
          />
        </a>
      ))
    }
  </div>
  {
    articles.length < totalFilteredCount && (
      <LinkButton class="mx-auto" href="/customers">
        Read more customer stories
      </LinkButton>
    )
  }
</section>
